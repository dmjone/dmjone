const API_URL = "https://dmj.one/api/attendance/?view_history=true&download_history_csv=true"; async function loadAttendance() { try { const t = await fetch(API_URL); if (!t.ok) throw new Error(`${t.status} ${t.statusText}`); const e = (await t.text()).trim().split(/\r?\n/).filter((t => t)); if (e.length < 2) throw new Error("No attendance data."); const [n, ...d] = e, a = n.split(","), c = new Array(a.length).fill(0), s = new Array(a.length).fill(0), o = document.getElementById("attendance-summary"), l = d.length, i = [`<div class="card me-3 mb-3" style="min-width:120px">\n         <div class="card-body p-2 text-center">\n           <h6 class="card-title mb-1">Students</h6>\n           <p class="mb-0">${l}</p>\n         </div>\n       </div>`, `<div class="card me-3 mb-3" style="min-width:120px">\n         <div class="card-body p-2 text-center">\n           <h6 class="card-title mb-1">Days</h6>\n           <p class="mb-0">${a.length - 2}</p>\n         </div>\n       </div>`]; a.slice(2).forEach(((t, e) => { i.push(`\n        <div class="card me-3 mb-3" style="min-width:100px">\n          <div class="card-body p-2 text-center">\n            <h6 class="card-title mb-1">${t}</h6>\n            <p class="mb-0 text-success">P: <span id="p${e}">0</span></p>\n            <p class="mb-0 text-danger">A: <span id="a${e}">0</span></p>\n          </div>\n        </div>\n      `) })), o.innerHTML = i.join(""); const r = document.querySelector("#table-container thead"), m = document.createElement("tr"); a.forEach(((t, e) => { const n = document.createElement("th"); n.textContent = t, e < 2 && (n.style.minWidth = "140px"), m.appendChild(n) })), r.appendChild(m); const p = document.querySelector("#table-container tbody"); d.forEach((t => { const e = t.split(","), n = document.createElement("tr"); e.forEach(((t, d) => { const a = document.createElement("td"); if (d >= 2) { const e = document.createElement("span"); e.classList.add("badge"), e.textContent = t || "", "P" === t ? (e.classList.add("bg-success"), c[d]++) : "A" === t ? (e.classList.add("bg-danger"), s[d]++) : e.classList.add("bg-secondary"), a.appendChild(e) } else a.textContent = e[d]; n.appendChild(a) })), p.appendChild(n) })), a.slice(2).forEach(((t, e) => { document.getElementById(`p${e}`).textContent = c[e + 2], document.getElementById(`a${e}`).textContent = s[e + 2] })), document.getElementById("loading").style.display = "none", document.getElementById("table-container").style.display = "block" } catch (t) { document.getElementById("loading").innerHTML = `<div class="alert alert-danger">Error: ${t.message}</div>` } } document.addEventListener("DOMContentLoaded", loadAttendance), document.getElementById("export-csv").addEventListener("click", (() => { const t = document.createElement("a"); t.href = "https://dmj.one/api/attendance/?view_history=true&download_history_csv=true", t.download = `attendance_history_${(new Date).toISOString().slice(0, 10)}.csv`, document.body.appendChild(t), t.click(), document.body.removeChild(t) }));
<!DOCTYPE html>
<html lang="en" data-bs-theme="auto">

    <head>
        <meta charset="UTF-8">
        <title>Article - ThryVexis</title>

        <!-- Open Graph / Twitter metadata -->
        <meta property="og:image" content="../img/ThryVexis.webp">
        <meta property="og:type" content="article">
        <meta name="twitter:card" content="summary">
        <meta name="twitter:site" content="@divyamohan1993">
        <meta name="twitter:creator" content="@divyamohan1993">
        <meta name="twitter:image" content="../img/ThryVexis.webp">

        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <meta name="author" content="Divya Mohan">
        <meta name="robots" content="index, follow">

        <!-- Prevent caching -->
        <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
        <meta http-equiv="Pragma" content="no-cache" />
        <meta http-equiv="Expires" content="0" />

        <link rel="icon" type="image/webp" href="../img/ThryVexis.webp">

        <!-- Bootstrap CSS -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
        <!-- FontAwesome for icons -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/brands.min.css" integrity="sha512-58P9Hy7II0YeXLv+iFiLCv1rtLW47xmiRpC1oFafeKNShp8V5bKV/ciVtYqbk2YfxXQMt58DjNfkXFOn62xE+g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        <!-- Google Fonts -->
        <link href="https://fonts.googleapis.com/css?family=Roboto:400,500,700" rel="stylesheet">

        <!-- KaTeX for math rendering -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.4/katex.min.js" integrity="sha512-sHSNLECRJSK+BFs7E8DiFc6pf6n90bLI85Emiw1jhreduZhK3VXgq9l4kAt9eTIHYAcuQBKHL01QKs4/3Xgl8g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.4/contrib/auto-render.min.js" integrity="sha512-iWiuBS5nt6r60fCz26Nd0Zqe0nbk1ZTIQbl3Kv7kYsX+yKMUFHzjaH2+AnM6vp2Xs+gNmaBAVWJjSmuPw76Efg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

        <!-- Our own CSS & head script -->
        <link rel="stylesheet" href="../asset/style.css" />
        <script src="../asset/script-head.js"></script>

        <!-- Include Marked.js for Markdown rendering -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/4.2.12/marked.min.js"></script>

        <!-- Hide the page until content is loaded -->
        <style>
            body {
                visibility: hidden;
            }
        </style>
    </head>

    <body>
        <!-- Navigation Bar -->
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container">
                <a class="navbar-brand" href="../">
                    <img src="../img/ThryVexis.webp" alt="ThryVexis Logo" class="img-fluid-disabled" height="40">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="ms-auto" id="dynamicButton">
                    <button id="nextArticle" class="btn btn-info btn-custom">Read Random</button>
                </div>
            </div>
        </nav>

        <!-- Article Banner -->
        <div class="article-banner">
            <div class="banner-content">
                <h1 id="bannerTitle" class="text-center container">Loading...</h1>
                <p id="bannerDate" class="text-center mx-auto"></p>
            </div>
        </div>

        <!-- Main Content -->
        <div class="container main-content">
            <div class="row">
                <!-- Article Content Column -->
                <div class="col-lg-9">
                    <div class="article-content" id="articleContent">
                        <!-- Article content will be loaded here -->
                    </div>
                </div>

                <!-- Sidebar Column -->
                <div class="col-lg-3">
                    <!-- Social Share Buttons -->
                    <div class="share-buttons my-4">
                        <span>Share: </span>
                        <a href="#" id="shareX" title="Share on X"><i class="fa-brands fa-x-twitter"></i></a>
                        <a href="#" id="shareFacebook" title="Share on Facebook"><i class="fab fa-facebook"></i></a>
                        <a href="#" id="shareLinkedIn" title="Share on LinkedIn"><i class="fab fa-linkedin-in"></i></a>
                        <a href="#" id="shareInstagram" title="Visit us on Instagram"><i class="fab fa-instagram"></i></a>
                    </div>

                    <!-- Author Info -->
                    <div class="author-info shadow" id="authorBio">
                        Loading author info...
                    </div>

                    <!-- Related Articles -->
                    <div class="related-articles p-2 shadow border border-1 border-warning">
                        <h5 class="text-center p-3">Related Articles</h5>
                        <div id="relatedArticles">
                            <!-- Related articles will be loaded here -->
                        </div>
                    </div>

                    <!-- Comments Section -->
                    <section id="comments" class="shadow-lg p-3 border border-1 border-info">
                        <h4>Comments</h4>
                        <div id="commentsSection">
                            <!-- Comments will be loaded here -->
                        </div>
                        <div class="mt-4">
                            <h5>Leave a Comment</h5>
                            <textarea id="commentText" class="form-control mb-2" rows="3" placeholder="Your comment..."></textarea>
                            <button id="submitComment" class="btn btn-primary">Submit Comment</button>
                        </div>
                    </section>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <footer class="bg-dark bg-opacity-75 text-white py-4 mt-5 shadow-lg">
            <div class="container">
                <p class="mb-2 text-center mx-auto">
                    &copy; 2025 <i class="fas fa-graduation-cap text-white"></i>
                    <strong>ThryVexis</strong> â€” A Dynamic Blog System Academic Project by
                    <a href="https://dmj.one" target="_blank" rel="noopener noreferrer" class="text-white text-decoration-none">dmj.one</a>. All rights reserved.
                </p>
            </div>
        </footer>

        <!-- Scripts: FontAwesome, Bootstrap Bundle -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

        <!-- JavaScript -->
        <script>

            // ALSO WORKING. FETCHING SINGULAR CONTENT ON BASIS OF SLUG. SLOW RENDERING.
            // DISPLAYS DIRECTLY ONCE ALL FETCHING COMPLETE.

            // Wrap everything in an async IIFE so we can await our fetches
            (async function initPage() {
                try {
                    // Load user profile (if any) before rendering the page
                    await (async function loadProfile() {
                        try {
                            const response = await fetch('../api/profile', { credentials: 'include', cache: 'no-store' });
                            const navLinks = document.getElementById('dynamicButton');
                            if (!response.ok) throw new Error('Not logged in');
                            const data = await response.json();
                            if (data.error) throw new Error(data.error);
                            if (data.role) {
                                navLinks.innerHTML = `<button id="logout" class="btn btn-warning btn-custom">Logout</button>`;
                                document.getElementById('logout').addEventListener('click', () => {
                                    fetch('../api/logout', { method: 'POST', cache: 'no-store' })
                                        .then(r => r.json())
                                        .then(() => window.location.href = '../../project-1/');
                                });
                            }
                        } catch (err) {
                            console.log("Not logged in:", err);
                        }
                    })();

                    // Extract the slug from the URL path
                    const urlSegments = window.location.pathname.split('/');
                    const articleSlug = urlSegments[urlSegments.length - 1]; // e.g. "time-management-tips"
                    let articleID;

                    // Fetch only the needed article (and related articles) from the new endpoint.
                    await fetch('../api/article/' + articleSlug, { cache: 'no-store' })
                        .then(response => response.json())
                        .then(data => {
                            if (data.error) {
                                document.getElementById('articleContent').innerHTML =
                                    '<div class="text-danger display-4 text-center">404: Article not found.</div><div class="text-center"><a href="../../">Go Back</a></div>';
                                return;
                            }
                            // Use the returned article object.
                            const article = data.article;
                            articleID = article.id;
                            // Update the page title using the article title if available; otherwise, fallback to the slug.
                            document.title = `${article.title || articleSlug} - ThryVexis`;

                            document.getElementById('bannerTitle').textContent = article.title;
                            document.getElementById('bannerDate').textContent = "Published on " + article.created_at + " by " + article.author.name;
                            document.getElementById('articleContent').innerHTML = marked.parse(article.content);

                            if (article.author) {
                                document.getElementById('authorBio').innerHTML = `
                                  <div class="card border border-1 border-danger mb-4">
                                    <div class="card-body">
                                      <div class="d-flex align-items-center">
                                        <img src="${article.author.avatar || 'https://dmj.one/logo.png'}" 
                                             class="rounded-circle me-3" alt="${article.author.name}" width="60" height="60">
                                        <div>
                                          <h5 class="mb-0" id="author-name">
                                            <a href="${article.author.url}" class="text-decoration-none">${article.author.name}</a>
                                          </h5>
                                          <small class="text-muted">Author</small>
                                        </div>
                                      </div>
                                      <p class="mt-3 mb-0">${article.author.bio || "No bio available."}</p>
                                    </div>
                                  </div>
                                `;
                            } else {
                                document.getElementById('authorBio').textContent = "Author information not available.";
                            }

                            // Load related articles using the related array from the API.
                            loadRelatedArticles(data.related);
                            loadComments();
                        })
                        .catch(error => {
                            console.error('Error loading article:', error);
                        });

                    // Helper: Load related articles into the sidebar.
                    function loadRelatedArticles(related) {
                        try {
                            document.getElementById('nextArticle').addEventListener('click', () => {
                                const nextArticle = related.pop();
                                if (nextArticle) {
                                    window.location.href = nextArticle.slug;
                                }
                            });
                        } catch (err) {
                            console.log('Error setting next article button:', err);
                        }

                        const container = document.getElementById('relatedArticles');
                        container.innerHTML = '';
                        if (related.length === 0) {
                            container.innerHTML = '<p>No related articles.</p>';
                        } else {
                            related.forEach(article => {
                                const card = document.createElement('div');
                                card.className = 'card mb-2';
                                card.innerHTML = `
                  <div class="card-body">
                    <h6 class="card-title">${article.title}</h6>
                    <p class="card-text"><small class="text-muted">Published on ${article.created_at}</small></p>
                    <a href="${article.slug}" class="stretched-link"></a>
                  </div>
                `;
                                container.appendChild(card);
                            });
                        }
                    }

                    // Helper: Load comments for the article.
                    function loadComments() {
                        fetch('../api/articles/' + articleID + '/comments')
                            .then(response => response.json())
                            .then(comments => {
                                const commentsSection = document.getElementById('commentsSection');
                                commentsSection.innerHTML = '';
                                if (comments.length === 0) {
                                    commentsSection.innerHTML = '<p>No comments yet.</p>';
                                } else {
                                    comments.forEach(comment => {
                                        commentsSection.innerHTML += `
                      <div class="comment">
                        <p>${marked.parse(comment.content)}</p>
                        <small>Posted on ${comment.created_at}</small>
                      </div>
                    `;
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Error fetching comments:', error);
                            });
                    }

                    document.getElementById('submitComment').addEventListener('click', () => {
                        const commentContent = document.getElementById('commentText').value;
                        if (!commentContent.trim()) {
                            alert("Please enter a comment before submitting.");
                            return;
                        }
                        fetch('../api/articles/' + articleID + '/comments', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ content: commentContent })
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    document.getElementById('commentText').value = '';
                                    loadComments();
                                } else {
                                    alert(data.error);
                                }
                            })
                            .catch(error => {
                                console.error('Error submitting comment:', error);
                            });
                    });

                    // Social share buttons setup.
                    function setupShareButtons() {
                        const currentUrl = encodeURIComponent(window.location.href);
                        const shareText = encodeURIComponent("Check out ThryVexis Blog!");
                        document.getElementById('shareX').href = `https://x.com/intent/tweet?url=${currentUrl}&text=${shareText}`;
                        document.getElementById('shareFacebook').href = `https://www.facebook.com/sharer/sharer.php?u=${currentUrl}`;
                        document.getElementById('shareLinkedIn').href = `https://www.linkedin.com/shareArticle?mini=true&url=${currentUrl}&title=${shareText}`;
                        document.getElementById('shareInstagram').href = `https://www.instagram.com/dmj.one`;
                    }
                    setupShareButtons();

                    // Now that everything is loaded and rendered, show the page.
                    document.body.style.visibility = 'visible';
                } catch (err) {
                    console.error("Error during initialization:", err);
                    // In case of an error, still show the page (perhaps with an error message).
                    document.body.style.visibility = 'visible';
                }
            })();
        </script>
        <!-- End JavaScript -->
    </body>

</html>
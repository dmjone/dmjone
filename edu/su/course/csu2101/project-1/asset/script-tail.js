!async function () { try { const e = await fetch("../api/profile", { credentials: "include", cache: "no-store" }), t = document.getElementById("dynamicButton"); if (!e.ok) throw new Error("Not logged in"); const n = await e.json(); if (n.error) throw new Error(n.error); n.role && (t.innerHTML = '<button id="logout" class="btn btn-warning btn-custom">Logout</button>', document.getElementById("logout").addEventListener("click", (() => { fetch("../api/logout", { method: "POST", cache: "no-store" }).then((e => e.json())).then((() => window.location.href = "../../project-1/")) }))) } catch (e) { console.log("Not logged in:", e) } }(); const urlSegments = window.location.pathname.split("/"), articleSlug = urlSegments[urlSegments.length - 1]; let articleID; function loadArticle() { fetch("../api/articlesCached", { cache: "default" }).then((e => e.json())).then((e => { let t = e.find((e => e.slug === articleSlug)); if (t) articleID = t.id, document.title = `${t.title || articleSlug} - ThryVexis`, document.getElementById("bannerTitle").textContent = t.title, document.getElementById("bannerDate").textContent = "Published on " + t.created_at + " by " + t.author.name, document.getElementById("articleContent").innerHTML = marked.parse(t.content), t.author ? document.getElementById("authorBio").innerHTML = `\n                                    <div class="card border border-1 border-danger mb-4">\n                                        <div class="card-body">\n                                            <div class="d-flex align-items-center">\n                                                <img src="${t.author.avatar || "https://dmj.one/logo.png"}" \n                                                     class="rounded-circle me-3" alt="${t.author.name}" width="60" height="60">\n                                                <div>\n                                                    <h5 class="mb-0" id="author-name">\n                                                        <a href="${t.author.url}" class="text-decoration-none">${t.author.name}</a>\n                                                    </h5>\n                                                    <small class="text-muted">Author</small>\n                                                </div>\n                                            </div>\n                                            <p class="mt-3 mb-0">${t.author.bio || "No bio available."}</p>\n                                        </div>\n                                    </div>\n                                ` : document.getElementById("authorBio").textContent = "Author information not available.", loadRelatedArticles(e, t); else { document.title = "404 - Not Found - ThryVexis"; const e = { bannerTitle: document.getElementById("bannerTitle"), bannerDate: document.getElementById("bannerDate"), mainContent: document.querySelector(".main-content"), footer: document.querySelector("footer") }; e.bannerTitle && (e.bannerTitle.textContent = "404: Article not found", e.bannerTitle.classList.add("text-capitalize")), e.bannerDate && (e.bannerDate.innerHTML = '<a href="../../" class="btn btn-danger btn-large text-capitalize">Go Back</a>'), e.mainContent?.style.setProperty("display", "none"), e.footer?.classList.remove("mt-5") } loadComments() })).catch((e => { console.error("Error loading article:", e) })) } function loadRelatedArticles(e, t) { let n = e.filter((e => e.id !== t.id && e.category === t.category)); !function (e) { for (let t = e.length - 1; t > 0; t--) { const n = Math.floor(Math.random() * (t + 1));[e[t], e[n]] = [e[n], e[t]] } }(n); try { document.getElementById("nextArticle").addEventListener("click", (() => { const e = n.pop(); try { e && (window.location.href = e.slug) } catch (e) { console.error("Error loading next article:", e) } })) } catch (e) { console.log("Error setting next article button:", e) } const o = n.slice(0, 3), r = document.getElementById("relatedArticles"); r.innerHTML = "", 0 === o.length ? r.innerHTML = "<p>No related articles.</p>" : o.forEach((e => { const t = document.createElement("div"); t.className = "card mb-2", t.innerHTML = `\n                            <div class="card-body">\n                                <h6 class="card-title">${e.title}</h6>\n                                <p class="card-text"><small class="text-muted">Published on ${e.created_at}</small></p>\n                                <a href="${e.slug}" class="stretched-link"></a>\n                            </div>\n                        `, r.appendChild(t) })) } function loadComments() { fetch("../api/articles/" + articleID + "/comments", { cache: "no-store" }).then((e => e.json())).then((e => { const t = document.getElementById("commentsSection"); t.innerHTML = "", 0 === e.length ? t.innerHTML = "<p>No comments yet.</p>" : e.forEach((e => { t.innerHTML += `\n                        <div class="comment">\n                            <p>${marked.parse(e.content)}</p>\n                            <small>Posted on ${e.created_at}</small>\n                        </div>\n                    ` })) })).catch((e => { console.error("Error fetching comments:", e) })) } function setupShareButtons() { const e = encodeURIComponent(window.location.href), t = encodeURIComponent("Check out ThryVexis Blog!"); document.getElementById("shareX").href = `https://x.com/intent/tweet?url=${e}&text=${t}`, document.getElementById("shareFacebook").href = `https://www.facebook.com/sharer/sharer.php?u=${e}`, document.getElementById("shareLinkedIn").href = `https://www.linkedin.com/shareArticle?mini=true&url=${e}&title=${t}`, document.getElementById("shareInstagram").href = "https://www.instagram.com/dmj.one" } document.getElementById("submitComment").addEventListener("click", (() => { const e = document.getElementById("commentText").value; e.trim() ? fetch("../api/articles/" + articleID + "/comments", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ content: e }) }).then((e => e.json())).then((e => { e.success ? (document.getElementById("commentText").value = "", loadComments()) : alert(e.error) })).catch((e => { console.error("Error submitting comment:", e) })) : alert("Please enter a comment before submitting.") })), setupShareButtons(), loadArticle();
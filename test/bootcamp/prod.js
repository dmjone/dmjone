const shuffle = a => { for (let e = a.length - 1; e > 0; e--) { const n = Math.floor(Math.random() * (e + 1));[a[e], a[n]] = [a[n], a[e]] } return a }, students = (a => { for (let e = a.length - 1; e > 0; e--) { const n = Math.floor(Math.random() * (e + 1));[a[e], a[n]] = [a[n], a[e]] } return a })([{ name: "Aarushi", id: "GF202217642" }, { name: "Aaryan Kathuga", id: "GF202219013" }, { name: "abhay chandel", id: "GF202217661" }, { name: "Abhay sharma", id: "GF202218683" }, { name: "Abhishek", id: "GF202219716" }, { name: "Adarsh choudhary", id: "GF202216680" }, { name: "Adarsh Kumar", id: "GF202218941" }, { name: "Adarsh sharma", id: "GF202215162" }, { name: "Adarsh verma", id: "GF202349954" }, { name: "Aditya Thakur", id: "GF202218718" }, { name: "Aerish Verma", id: "GF202217911" }, { name: "Akanksha", id: "GF202217069" }, { name: "Akash", id: "GF202218465" }, { name: "Akshat Tiwari", id: "GF202217215" }, { name: "Akshit", id: "GF202215081" }, { name: "Akshit", id: "GF202220189" }, { name: "Akshit Thakur", id: "GF202220107" }, { name: "Aman Thakur", id: "GF202216027" }, { name: "Amandeep kumar", id: "GF202219136" }, { name: "Amogh Thakur", id: "GF202340427" }, { name: "Anant Chaudhary", id: "GF202217577" }, { name: "Anish", id: "GF202216452" }, { name: "Ankit Saini", id: "GF202215717" }, { name: "Ansh", id: "GF202215982" }, { name: "Ansh Bisht", id: "GF202219995" }, { name: "Ansh Thakur", id: "GF202219910" }, { name: "Anshika Bhuria", id: "GF202213991" }, { name: "Anshuman Mohanty", id: "GF202217744" }, { name: "Anugraha Tamang", id: "GF202216959" }, { name: "Anuj kumar", id: "GF202214751" }, { name: "Anurag", id: "GF202218710" }, { name: "Aritra Mondal", id: "GF202216884" }, { name: "Armaan Gautam", id: "GF202219099" }, { name: "Arpit", id: "GF202214861" }, { name: "Arpit Bhardwaj", id: "GF202216002" }, { name: "Arpit Singh Dhillon", id: "GF202219588" }, { name: "Aryan Sharma", id: "GF202218457" }, { name: "Aryan Thakur", id: "GF202218659" }, { name: "Ashutosh Rana", id: "GF202221023" }, { name: "Asmi goyal", id: "GF202218101" }, { name: "Astha Chandel", id: "GF202214559" }, { name: "Atul Chauhan", id: "GF202216859" }, { name: "Ayush", id: "GF202215719" }, { name: "Bhavishya Sharma", id: "GF202220590" }, { name: "Chirag pal", id: "GF202216782" }, { name: "Debajyoti Bhowmik", id: "GF202216426" }, { name: "Devyani", id: "GF202218776" }, { name: "Devyansh Pawar", id: "GF202344200" }, { name: "Dhaneshwar Singh", id: "GF202220123" }, { name: "Divya Mohan", id: "GF202214698" }, { name: "Divyanshu", id: "GF202218328" }, { name: "Harman Rana", id: "GF202218756" }, { name: "Harsh Kanwar", id: "GF202215401" }, { name: "Nitin Thakur", id: "GF202216583" }, { name: "Harsh Pathania", id: "GF202219897" }, { name: "Harshal Khajuria", id: "GF202218277" }, { name: "Harshit sharma", id: "GF202215237" }, { name: "Himanshi Verma", id: "GF202215904" }, { name: "Nityam Sharma", id: "GF202218795" }, { name: "Ivaan Ipsa Kundu", id: "GF202216775" }, { name: "Jamuna Rai", id: "GF202218652" }, { name: "Jasleen", id: "GF202217023" }, { name: "Jasmeen Sharma", id: "GF202217536" }, { name: "Jaspreet Singh", id: "GF202217952" }, { name: "JATIN", id: "GF202219717" }, { name: "Kamaksha dogra", id: "GF202218486" }, { name: "Kaustuv Sharma", id: "GF202218455" }, { name: "Krish Saini", id: "GF202216008" }, { name: "Kritika Lamba", id: "GF202220345" }, { name: "parixit sharma", id: "GF202217428" }, { name: "Kshitij Shankar Kulal", id: "GF202214673" }, { name: "Kumkum", id: "GF202220969" }, { name: "Lakshay Sharma", id: "GF202216641" }, { name: "Lakshika", id: "GF202220476" }, { name: "Lavanya", id: "GF202217875" }, { name: "Manasdeep", id: "GF202219772" }, { name: "Manish Kumar", id: "GF202218585" }, { name: "Mayank Banga", id: "GF202218364" }, { name: "Milli khatri", id: "GF202218910" }, { name: "MOHD SHAMMAD", id: "GF202219177" }, { name: "Naman Sharma", id: "GF202215980" }, { name: "Naveen Chauhan", id: "GF202218643" }, { name: "Nikita sharma", id: "GF202218595" }, { name: "Nisha kumari", id: "GF202220815" }, { name: "Palak Thakur", id: "GF202219794" }, { name: "Paras Chauhan", id: "GF202216945" }, { name: "Parshav Pathania", id: "GF202219568" }, { name: "PIYUSH BANER", id: "GF202217706" }, { name: "Piyush Sharma", id: "GF202218943" }, { name: "Piyush Snate", id: "GF202217922" }, { name: "Prabhakar Lal", id: "GF202218129" }, { name: "Pranjal Chauhan", id: "GF202215557" }, { name: "Pratham", id: "GF202216921" }, { name: "Prikshit Thakur", id: "GF202216395" }, { name: "Prithak Thapa", id: "IN/2022/1191" }, { name: "Radhe Garg", id: "GF202218040" }, { name: "Radhika Kanwar", id: "GF202344308" }, { name: "Raja Babu Jamatia", id: "GF202347734" }, { name: "RAJAT BHATNAGAR", id: "GF202213862" }, { name: "Raksha", id: "GF202346910" }, { name: "Rameshwar Katoch", id: "GF202216821" }, { name: "Ranish goyal", id: "GF202217662" }, { name: "Ravi Kumar", id: "GF202218734" }, { name: "Rehan Haque", id: "GF202220756" }, { name: "Riddhi sahu", id: "GF202220064" }, { name: "Rijul chaudhary", id: "GF202218418" }, { name: "Rishu Kumar gupta", id: "GF202216818" }, { name: "Ritik Saini", id: "GF202215284" }, { name: "Riyant Thakur", id: "GF202215973" }, { name: "Rohit Dhiman", id: "GF202219890" }, { name: "Rohit Kumar", id: "GF202220522" }, { name: "Rohit Mehta", id: "GF202216619" }, { name: "Saksham Awasthi", id: "GF202219306" }, { name: "SAKSHI KHACHARIYA", id: "GF202218711" }, { name: "Samarth Singh", id: "GF202341183" }, { name: "Satyam Tripathi", id: "GF202218625" }, { name: "Saurav Thakur", id: "GF202220516" }, { name: "Shambhav Chhetri", id: "GF202213793" }, { name: "Shivam Garg", id: "GF202215586" }, { name: "Shivam Sharma", id: "GF202218544" }, { name: "Shreshth Srivastav", id: "GF202218982" }, { name: "Shruti", id: "GF202219655" }, { name: "Shruti Thakur", id: "GF202218590" }, { name: "Siddharth pandoh", id: "GF202350614" }, { name: "Siddharth Singh Markam", id: "GF202218839" }, { name: "Singh Rishabh Ajit", id: "GF202344756" }, { name: "Sooraj", id: "GF202217243" }, { name: "Soveer Shah", id: "GF202213662" }, { name: "Subhojeet ghosh", id: "GF202347000" }, { name: "Sujal Jaganbal", id: "GF202214891" }, { name: "Sukham preet", id: "IN/2022/1052" }, { name: "Sushant Tomar", id: "GF202216843" }, { name: "Syed Mohammad wajahat tahir", id: "GF202218362" }, { name: "Tanshil Tigran", id: "GF202219644" }, { name: "Tanya Puri", id: "GF202219386" }, { name: "Tarun kumar", id: "GF202214708" }, { name: "Vansh malik", id: "GF202218880" }, { name: "Vanshika Painuly", id: "GF202215303" }, { name: "Vanshika Sharma", id: "GF202218737" }, { name: "VEDANSH SHARMA", id: "GF202218482" }, { name: "Vibhav Singh", id: "GF202218143" }, { name: "Vidya Parmar", id: "GF202215292" }, { name: "Vinayak Awasthi", id: "GF202218584" }, { name: "Vineet Dhiman", id: "GF202218953" }, { name: "Vipul Verma", id: "GF202214829" }, { name: "Yatharth Saroha", id: "GF202219757" }, { name: "Yuvraj Kumar", id: "GF202350495" }]), firstNameCount = students.reduce(((a, e) => { const n = e.name.split(" ")[0]; return a[n] = (a[n] || 0) + 1, a }), {}); let voices = []; function loadVoices() { voices = speechSynthesis.getVoices().filter((a => a.lang.startsWith("en"))) } function getNaturalVoice() { return voices.find((a => "en-IN" === a.lang)) || voices.find((a => a.name.includes("Google US English") && "en-US" === a.lang)) || voices.find((a => "en-US" === a.lang)) || null } speechSynthesis.onvoiceschanged = loadVoices, loadVoices(); const nameCount = students.reduce(((a, e) => (a[e.name] = (a[e.name] || 0) + 1, a)), {}); document.getElementById("date").textContent = (new Date).toLocaleDateString(); const container = document.getElementById("students"), absentSet = new Set, tiles = []; function speakAndWait(a, e) { const n = a.name.split(" ")[0]; let i = n; if (firstNameCount[n] > 1 && (i += ` ${a.id.slice(-4)}`), "speechSynthesis" in window) { const a = new SpeechSynthesisUtterance(i), n = getNaturalVoice(); n && (a.voice = n), a.lang = n?.lang || "en-IN", a.rate = 1.5, a.pitch = 1.05, a.onend = () => setTimeout(e, 500), speechSynthesis.speak(a) } else setTimeout(e, 500) } students.forEach(((a, e) => { const n = document.createElement("div"); n.className = "student", n.textContent = `${a.name} - ${a.id}`, n.onclick = () => { absentSet.has(e) ? (absentSet.delete(e), n.classList.remove("absent")) : (absentSet.add(e), n.classList.add("absent")) }, container.appendChild(n), tiles.push(n) })); let currentIndex = -1; document.getElementById("rollcall").onclick = () => { currentIndex = 0, tiles.forEach((a => a.classList.remove("current"))), function a() { currentIndex > 0 && tiles[currentIndex - 1].classList.remove("current"), currentIndex < tiles.length ? (tiles[currentIndex].classList.add("current"), speakAndWait(students[currentIndex], (() => { currentIndex++, a() }))) : currentIndex = -1 }() }, document.addEventListener("keydown", (a => { "Enter" === a.key && currentIndex > 0 && tiles[currentIndex].click() })), document.getElementById("generate").onclick = () => { const a = students.map(((a, e) => ({ name: a.name, id: a.id, status: absentSet.has(e) ? "A" : "P" }))); a.sort(((a, e) => a.name.localeCompare(e.name))); const e = XLSX.utils.book_new(), n = ["Name", "ID", document.getElementById("date").textContent], i = a.map((a => [a.name, a.id, a.status])), t = XLSX.utils.aoa_to_sheet([n, ...i]); XLSX.utils.book_append_sheet(e, t, "Attendance"); const m = XLSX.write(e, { bookType: "xlsx", type: "array" }); saveAs(new Blob([m], { type: "application/octet-stream" }), `Attendance_${document.getElementById("date").textContent.replace(/\//g, "-")}.xlsx`) };